<?xml version="1.0" encoding="UTF-8"?><record_update table="cmn_map_page">
    <cmn_map_page action="INSERT_OR_UPDATE">
        <center_address>Yogododji, Africa</center_address>
        <center_latitude>14.883333</center_latitude>
        <center_longitude>-1.766667</center_longitude>
        <controls_size>large</controls_size>
        <initial_zoom>2</initial_zoom>
        <name>x_snc_loaner_req_Requested for Locations</name>
        <overview>false</overview>
        <refresh_on_zoom>false</refresh_on_zoom>
        <script><![CDATA[var gr = new GlideRecord('x_snc_loaner_req_loaner_request');
gr.addEncodedQuery("active=true^requested_for.cityISNOTEMPTY");
gr.query();

gs.info('PR: count ' + gr.getRowCount());

while(gr.next()){
	
	//  Add copied  REST Message Script BELOW this line

 var r = new sn_ws.RESTMessageV2('x_snc_loaner_req.Get Lat Long', 'Default GET');
 r.setStringParameterNoEscape('country', gr.requested_for.country);
 r.setStringParameterNoEscape('count', '1');
 r.setStringParameterNoEscape('addr', gr.requested_for.city);
 r.setStringParameterNoEscape('lang', 'en');

//override authentication profile 
//authentication type ='basic'/ 'oauth2'
//r.setAuthenticationProfile(authentication type, profile name);

//set a MID server name if one wants to run the message on MID
//r.setMIDServer('MY_MID_SERVER');

//if the message is configured to communicate through ECC queue, either
//by setting a MID server or calling executeAsync, one needs to set skip_sensor
//to true. Otherwise, one may get an intermittent error that the response body is null
//r.setEccParameter('skip_sensor', true);

 var response = r.execute();
 var responseBody = response.getBody();
	gs.info('PR: Body ' + response.getBody());
 var httpStatus = response.getStatusCode();

	
	
	//  Add copied REST Message script ABOVE this line
	
	
	// Extract latitude and longitude values from REST Message response
	var xmlDoc = new XMLDocument2();
	xmlDoc.parseXML(responseBody);
	var myLat= xmlDoc.getNodeText("//latitude");
	var myLong= xmlDoc.getNodeText("//longitude");
	
	gs.info('PR: ' + myLat);
	
	// Plot each Requested for's location on a google map
	var item = map.addItem(gr);
	item.latitude = String(myLat);
	item.longitude = String(myLong);
	item.dialog_title = gr.getDisplayValue();
	item.icon = "https://maps.google.com/mapfiles/ms/micons/yellow.png";
	item.icon_width = "32";
	item.icon_height = "32";

}
]]></script>
        <show_device_location>true</show_device_location>
        <suffix>Requested for Locations</suffix>
        <sys_class_name>cmn_map_page</sys_class_name>
        <sys_created_by>pryder</sys_created_by>
        <sys_created_on>2019-10-23 14:58:36</sys_created_on>
        <sys_id>25ee4e67a82080107f448a9d9367966d</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>x_snc_loaner_req_Requested for Locations</sys_name>
        <sys_package display_value="Loaner Request" source="x_snc_loaner_req">4a19abb6a86c00107f448a9d9367968e</sys_package>
        <sys_policy/>
        <sys_scope display_value="Loaner Request">4a19abb6a86c00107f448a9d9367968e</sys_scope>
        <sys_update_name>cmn_map_page_25ee4e67a82080107f448a9d9367966d</sys_update_name>
        <sys_updated_by>pryder</sys_updated_by>
        <sys_updated_on>2019-10-23 15:09:58</sys_updated_on>
        <type>terrain</type>
        <type_selection>buttons</type_selection>
    </cmn_map_page>
</record_update>
